---
- name: Setup MySQL server on CentOS with remote access
  hosts: my_servers
  become: true
  tasks:
    - name: Ensure Docker is installed
      ansible.builtin.command:
        cmd: docker --version
      register: docker_check
      failed_when: docker_check.rc != 0

    - name: Pull CentOS image
      ansible.builtin.command:
        cmd: docker pull centos:7

    - name: Start a CentOS container
      ansible.builtin.command:
        cmd: docker run -d --name mysql-container -p 3306:3306 centos:7 /usr/sbin/init

    - name: Install MySQL inside the container
      ansible.builtin.docker_exec:
        container: mysql-container
        command: |
          yum update -y && \
          yum install -y mysql-server && \
          systemctl enable mysqld && \
          systemctl start mysqld

    - name: Configure MySQL to listen on all IP addresses
      ansible.builtin.docker_exec:
        container: mysql-container
        command: |
          echo '[mysqld]' >> /etc/my.cnf && \
          echo 'bind-address = 0.0.0.0' >> /etc/my.cnf && \
          systemctl restart mysqld

    - name: Create a remote MySQL user
      ansible.builtin.docker_exec:
        container: mysql-container
        command: |
          mysql -u root -e "CREATE USER '${MYSQL_USER}'@'%' IDENTIFIED BY '${MYSQL_PASSWORD}';" && \
          mysql -u root -e "GRANT ALL PRIVILEGES ON *.* TO '${MYSQL_USER}'@'%' WITH GRANT OPTION;" && \
          mysql -u root -e "FLUSH PRIVILEGES;"
      environment:
        MYSQL_USER: "{{ lookup('env', 'MYSQL_USER') }}"
        MYSQL_PASSWORD: "{{ lookup('env', 'MYSQL_PASSWORD') }}"
