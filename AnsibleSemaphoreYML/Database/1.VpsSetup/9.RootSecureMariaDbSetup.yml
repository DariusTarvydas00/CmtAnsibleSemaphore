---
- name: Configure and secure MariaDB
  hosts: all
  become: true

  vars:
    mariadb_root_password: "{{ lookup('env', 'MARIADB_ROOT_PASSWORD') }}"
    mariadb_bind_address: "127.0.0.1"  # Default bind address
    mariadb_admin_username: "{{ lookup('env', 'MARIADB_ADMIN_USERNAME') }}"
    mariadb_admin_password: "{{ lookup('env', 'MARIADB_ADMIN_PASSWORD') }}"
    mariadb_cmt_server_username: "{{ lookup('env', 'MARIADB_CMT_SERVER_USERNAME') }}"
    mariadb_cmt_server_password: "{{ lookup('env', 'MARIADB_CMT_SERVER_PASSWORD') }}"
    
    mariadb_databases:
      - name: "cmt_database"
      - name: "Accounts"
      - name: "Authentication"
      - name: "CabalCash"
      - name: "CabalGuild"
      - name: "EventData"
      - name: "Netcafebilling"
      - name: "Server01"
  
  tasks:
    # Ensure MariaDB service is started
    - name: Start and enable MariaDB service
      systemd:
        name: mariadb
        state: started
        enabled: true

    # Set the root password if not already set
    - name: Set the root password if not already set
      mysql_user:
        name: root
        password: "{{ mariadb_root_password }}"
        host: localhost
        state: present
      when: mariadb_root_password is defined

    # Remove anonymous users
    - name: Remove anonymous users
      mysql_user:
        name: ""
        host: "%"
        state: absent
        login_user: root
        login_password: "{{ mariadb_root_password }}"
      ignore_errors: true  # In case there are no anonymous users

#    # Disallow remote root login
#    - name: Disallow root login from remote hosts
#      mysql_user:
#        name: root
#        host: "%"
#        state: absent
#        login_user: root
#        login_password: "{{ mariadb_root_password }}"
#      ignore_errors: true  # In case the root user is not allowed remote login

    # Remove the test database
    - name: Remove test database
      mysql_db:
        name: test
        state: absent
        login_user: root
        login_password: "{{ mariadb_root_password }}"
      ignore_errors: true  # In case the test database is already removed

    # Remove test users using a shell command
    - name: Remove test users from mysql.user table
      shell: |
        mysql -u root -p{{ mariadb_root_password }} -e "DELETE FROM mysql.user WHERE user='';"
      ignore_errors: true  # In case there are no test users to delete

    # Reload privilege tables
    - name: Reload privilege tables
      mysql_user:
        name: root
        host: localhost
        login_user: root
        login_password: "{{ mariadb_root_password }}"
        state: present
        update_password: on_create
      ignore_errors: true  # In case reload fails, it won't halt the playbook

    # Configure MariaDB bind address
    - name: Configure MariaDB bind address
      lineinfile:
        path: /etc/mysql/mariadb.conf.d/50-server.cnf
        regexp: '^bind-address'
        line: "bind-address = {{ mariadb_bind_address }}"
        create: yes
        backup: yes
      notify: Restart MariaDB service

    # Create databases
    - name: Create databases
      mysql_db:
        name: "{{ item.name }}"
        state: present
        login_user: root
        login_password: "{{ mariadb_root_password }}"
      loop: "{{ mariadb_databases }}"

    # Create an admin user and grant all privileges
    - name: Create an admin user and grant privileges
      mysql_user:
        name: "{{ mariadb_admin_username }}"
        password: "{{ mariadb_admin_password }}"
        priv: "*.*:ALL"
        state: present
        login_user: root
        login_password: "{{ mariadb_root_password }}"
    
    # Create a cmt server user and grant database-specific privileges
    - name: Create a cmt server user and grant privileges
      mysql_user:
        name: "{{ mariadb_cmt_server_username }}"
        password: "{{ mariadb_cmt_server_password }}"
        priv: "{{ item.name }}.*:SELECT,INSERT,UPDATE,DELETE"
        state: present
        login_user: root
        login_password: "{{ mariadb_root_password }}"
      loop: "{{ mariadb_databases }}"
      when: item.name != "cmt_database"  # Exclude cmt_database from cmt server user privileges

  handlers:
    - name: Restart MariaDB service
      systemd:
        name: mariadb
        state: restarted
