---
- name: Run MariaDB Docker in Semaphore
  hosts: all
  become: true

  vars:
    mariadb_image_name: "mariadb:latest"  # Official MariaDB Docker image
    mariadb_container_name: "mariadb-container"
    mariadb_root_password: "{{ lookup('env', 'MARIADB_ROOT_PASSWORD') }}"  # Root password stored in environment variable
    mariadb_data_volume: "mariadb-data"
    mariadb_port: 3306  # Default MariaDB port

  tasks:
    # Step 1: Install Docker
    - name: Install Docker
      apt:
        name:
          - docker.io
        state: present
        update_cache: yes

    # Step 2: Start and enable Docker service
    - name: Start and enable Docker service
      systemd:
        name: docker
        state: started
        enabled: true

    # Step 3: Run the MariaDB Docker Container
    - name: Run MariaDB Docker Container
      docker_container:
        name: "{{ mariadb_container_name }}"
        image: "{{ mariadb_image_name }}"
        state: started
        restart_policy: always
        ports:
          - "1433:{{ mariadb_port }}"
        env:
          MYSQL_ROOT_PASSWORD: "{{ mariadb_root_password }}"  # Environment variable for root password
        volumes:
          - "{{ mariadb_data_volume }}:/var/lib/mysql"  # Persistent data storage for MariaDB

    # Step 4: Verify the container is running
    - name: Verify running Docker container
      command: docker ps -f "name={{ mariadb_container_name }}"
      register: container_status
      failed_when: container_status.stdout == ""

    # Step 5: Check if MariaDB port is mapped correctly
    - name: Check if MariaDB port is mapped
      command: docker port {{ mariadb_container_name }}
      register: port_status

    - name: Display port status
      debug:
        msg: "MariaDB port status: {{ port_status.stdout }}"

    # Step 6: Display container running status
    - name: Display running container status
      debug:
        msg: "Container {{ mariadb_container_name }} is running successfully."
