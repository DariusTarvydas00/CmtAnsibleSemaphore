---
- name: Configure and secure MariaDB
  hosts: all
  become: true

  vars:
    mariadb_root_password: "{{ lookup('env', 'MARIADB_ROOT_PASSWORD') }}"
    mariadb_bind_address: "127.0.0.1"  # Default bind address
    mariadb_admin_username: "{{ lookup('env', 'MARIADB_ADMIN_USERNAME') }}"
    mariadb_admin_password: "{{ lookup('env', 'MARIADB_ADMIN_PASSWORD') }}"
    mariadb_cmt_server_username: "{{ lookup('env', 'MARIADB_CMT_SERVER_USERNAME') }}"
    mariadb_cmt_server_password: "{{ lookup('env', 'MARIADB_CMT_SERVER_PASSWORD') }}"
    
    mariadb_databases:
      - name: "cmt_database"
      - name: "Accounts"
      - name: "Authentication"
      - name: "CabalCash"
      - name: "CabalGuild"
      - name: "EventData"
      - name: "Netcafebilling"
      - name: "Server01"
    

  tasks:
    # Ensure MariaDB service is started
    - name: Start and enable MariaDB service
      systemd:
        name: mariadb
        state: started
        enabled: true

    # Secure the MariaDB installation
    - name: Secure MariaDB installation
      shell: |
        mysql -e "DELETE FROM mysql.user WHERE User='';"
        mysql -e "DROP DATABASE IF EXISTS test;"
        mysql -e "DELETE FROM mysql.db WHERE Db='test' OR Db='test\\_%';"
        mysql -e "ALTER USER 'root'@'localhost' IDENTIFIED BY '{{ mariadb_root_password }}';"
        mysql -e "FLUSH PRIVILEGES;"
      args:
        warn: false

    # Configure MariaDB to listen only on specified IP
    - name: Configure MariaDB bind address
      lineinfile:
        path: /etc/mysql/mariadb.conf.d/50-server.cnf
        regexp: '^bind-address'
        line: "bind-address = {{ mariadb_bind_address }}"
        create: yes
        backup: yes
      notify: Restart MariaDB service

    # Restrict root access to localhost
    - name: Restrict root access to localhost
      mysql_user:
        name: root
        host: "%"
        state: absent
        login_user: root
        login_password: "{{ mariadb_root_password }}"
      ignore_errors: true  # In case it's already restricted

    # Create databases
    - name: Create databases
      mysql_db:
        name: "{{ item.name }}"
        state: present
        login_user: root
        login_password: "{{ mariadb_root_password }}"
      loop: "{{ mariadb_databases }}"

    # Create an admin user and grant privileges
    - name: Create an admin user and grant privileges
      mysql_user:
        name: "{{ mariadb_admin_username }}"
        password: "{{ mariadb_admin_password }}"
        priv: "*.*:ALL"
        state: present
        login_user: root
        login_password: "{{ mariadb_root_password }}"
    
    # Create a cmt server user and grant privileges
    - name: Create an cmt server user and grant privileges
      mysql_user:
        name: "{{ mariadb_admin_username }}"
        password: "{{ mariadb_admin_password }}"
        priv: "{{ item.name }}.*:SELECT,INSERT,UPDATE,DELETE"
        state: present
        login_user: root
        login_password: "{{ mariadb_root_password }}"
      loop: "{{ mariadb_databases }}"
      when: item.name != "cmt_database"  # Example of excluding a specific database, can modify as needed

  handlers:
    - name: Restart MariaDB service
      systemd:
        name: mariadb
        state: restarted
