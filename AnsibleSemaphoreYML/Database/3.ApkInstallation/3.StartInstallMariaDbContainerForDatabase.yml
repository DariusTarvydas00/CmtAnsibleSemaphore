---
- name: Setup MariaDB container
  hosts: localhost
  become: true
  become_method: sudo
  become_user: root
  gather_facts: false
  vars:
    mysql_container_name: "mariadb_server"
    mysql_root_password: "{{ lookup('env', 'MYSQL_ROOT_PASSWORD') }}"
    mysql_database: "{{ lookup('env', 'MYSQL_DATABASE') }}"
    mysql_user: "{{ lookup('env', 'MYSQL_USER') }}"
    mysql_user_password: "{{ lookup('env', 'MYSQL_USER_PASSWORD') }}"
    mariadb_image: "mariadb:latest"
    mysql_network_name: "mysql_network"

  tasks:
    # Pull the latest MariaDB Docker image
    - name: Pull the latest MariaDB Docker image
      docker_image:
        name: "{{ mariadb_image }}"
        source: pull

    # Create a Docker volume for MySQL data
    - name: Create a Docker volume for MySQL data
      docker_volume:
        name: mysql_data
        state: present

    # Create custom Docker network (if needed)
    - name: Create custom Docker network
      docker_network:
        name: "{{ mysql_network_name }}"
        driver: bridge
        state: present

    # Ensure MariaDB container is running
    - name: Start MariaDB container
      docker_container:
        name: "{{ mysql_container_name }}"
        image: "{{ mariadb_image }}"
        state: started
        restart_policy: unless-stopped
        env:
          MYSQL_ROOT_PASSWORD: "{{ mysql_root_password }}"
          MYSQL_DATABASE: "{{ mysql_database }}"
          MYSQL_USER: "{{ mysql_user }}"
          MYSQL_PASSWORD: "{{ mysql_user_password }}"
        volumes:
          - mysql_data:/var/lib/mysql
        networks:
          - name: "{{ mysql_network_name }}"
        ports:
          - "3306:3306"

    # Wait for MySQL to be accessible
    - name: Wait for MySQL to be accessible
      wait_for:
        host: "127.0.0.1"
        port: 3306
        delay: 10
        timeout: 60
        state: started
